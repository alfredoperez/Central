<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:my="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">

	<SolidColorBrush x:Key="MenuBackground" Color="White"/>
	<Color x:Key="SelectedBackgroundColor"  ScA="1.0" ScR="0.0" ScG="0.0" ScB="1.0"  />
	<SolidColorBrush x:Key="MenuHighlightedBackground" Color="#FF0064AE"/>
	<SolidColorBrush x:Key="CentralBackground" Color="#FF0072C6"/>
	<SolidColorBrush x:Key="CentralForeground" Color="White"/>
	<SolidColorBrush x:Key="CentralPrincipalSectionBackground" Color="#FFF3F3F3"/>
	<SolidColorBrush x:Key="ListBorder" Color="#828790"/>

	<SolidColorBrush x:Key="BackgroundParentListViewHighlighted" Color="#FFE7E7E7"/>
	<SolidColorBrush x:Key="BorderBrushParentListViewHighlited" Color="#FFF3F3F3"/>
	<SolidColorBrush x:Key="BackgroundParentListViewSelected" Color="#FFD4D4D4"/>
	<SolidColorBrush x:Key="BorderBrushParentListViewSelected" Color="#FFF3F3F3"/>
	<SolidColorBrush x:Key="BackgroundParentListView" Color="#FFF3F3F3"/>

	<SolidColorBrush x:Key="BackgroundChildrenListViewHighlited" Color="#FFF3F3F3"/>
	<SolidColorBrush x:Key="BorderBrushChildrenListViewHighlighted" Color="#FFF3F3F3"/>
	<SolidColorBrush x:Key="BackgroundChildrenListViewSelected" Color="#FF0072C6"/>
	<SolidColorBrush x:Key="BorderBrushChildrenListViewHSelected" Color="White"/>
	<SolidColorBrush x:Key="BackgroundChildrenListView" Color="White"/>
    
	<SolidColorBrush x:Key="ForegroundHighlighted" Color="Black"/>
	<SolidColorBrush x:Key="ForegroundChildrenSelected" Color="White"/>
	<SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131"/>
	<LinearGradientBrush x:Key="ApplicationNameBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF14BBD2" Offset="0"/>
		<GradientStop Color="#FF013C6C" Offset="1"/>
	</LinearGradientBrush>
    <!--Background-->
    <SolidColorBrush x:Key="Background" Color="#1C1C1C"/>
    <SolidColorBrush x:Key="LightBackground" Color="#2D2D30"/>
    <Color x:Key="AccentColor">#2D2D30</Color>
    <Color x:Key="WhiteColor">#2D2D30</Color>
    <Color x:Key="BlackColor">#FFFFFFFF</Color>

    <!--Foreground-->
    <!--<SolidColorBrush x:Key="Foreground" Color="#FFFFFFFF"/>-->

    <!--General-->
    <SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
    <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
    <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
    <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
    <SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>
    <SolidColorBrush x:Key="BorderBrushNormal" Color="#54545C"/>

    <!--Text Box-->
    <SolidColorBrush x:Key="TextBoxBackground" Color="#333337"/>
    <SolidColorBrush x:Key="TextBoxBackgroundSelected" Color="#3F3F46"/>
	<SolidColorBrush x:Key="GrayColor" Color="#333337"/>

    <!--Search Text Box-->
    <SolidColorBrush x:Key="SearchTextForeground" Color="#999999"/>

    <!--Link Button-->
    <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB"/>
    <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF"/>

    <!--Close Button-->
    <SolidColorBrush x:Key="CloseButtonBackgroundHighlighted" Color="#39ADFB"/>
    <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="#084E7D"/>
    <SolidColorBrush x:Key="CloseButtonStroke" Color="#AAFFFFFF"/>
    <SolidColorBrush x:Key="CloseButtonStrokeHighlighted" Color="#FFFFFF"/>

    <!--Menu-->
    <SolidColorBrush x:Key="MenuSeparatorBorderBrush" Color="#333337"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBackground" Color="#3E3E40"/>
    <SolidColorBrush x:Key="SubmenuItemBackground" Color="#1B1B1C"/>
    <SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" Color="#333334"/>
    <SolidColorBrush x:Key="MenuDisabledForeground" Color="#656565"/>

    <!--Scroll Bar-->
    <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted" Color="#05FFFFFF"/>

    <FontFamily x:Key="HeaderFontFamily">Segoe UI Light, Lucida Sans Unicode, Verdana</FontFamily>
	<my:Double x:Key="ApplicationNameFontSize">50</my:Double>
	<my:Double x:Key="ContentFontSize">14</my:Double>
    <my:Double x:Key="HeaderFontSize">22</my:Double>
    <my:Double x:Key="GroupNameFontSize">18</my:Double>
        <!--Menu Style-->
	<Style x:Key="MenuMetroStyle" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{StaticResource MenuBackground}"/>
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground" Value="{StaticResource MenuHighlightedBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border BorderBrush="{StaticResource MenuBackground}"
							BorderThickness="0,0,0,1"
							 Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="White" Margin="0">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>

			</Setter.Value>
		</Setter>

	</Style>
	<!--Separator Style-->
	<Style x:Key="MetroSeparator" TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid>
						<Rectangle Height="1" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--MenuItem Style-->
	<Style x:Key="MetroMenuItem" TargetType="{x:Type MenuItem}">
		<Setter Property="Foreground" Value="{StaticResource MenuHighlightedBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border x:Name="Border"
						Background="{StaticResource MenuBackground}"
						BorderBrush="{StaticResource MenuHighlightedBackground}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
								<ColumnDefinition x:Name="Col3" Width="14"/>
							</Grid.ColumnDefinitions>

							<!-- ContentPresenter to show an Icon if needed -->
							<ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

							<!-- Glyph is a checkmark if needed for a checkable menu -->
							<Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center"></Grid>

							<!-- Content for the menu text etc -->
							<ContentPresenter Grid.Column="1"
										  Margin="{TemplateBinding Padding}"
										  x:Name="HeaderHost"
										  RecognizesAccessKey="True"
										  ContentSource="Header"/>

							<!-- Content for the menu IGT -->
							<ContentPresenter Grid.Column="2"
										  Margin="8,1,8,1"
										  x:Name="IGTHost"
										  ContentSource="InputGestureText"
										  VerticalAlignment="Center"/>

							<!-- Arrow drawn path which points to the next level of the menu -->
							<Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center"></Grid>

							<!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
							<Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
								<Border x:Name="SubMenuBorder" BorderBrush="{StaticResource MenuBackground}" Background="{StaticResource MenuBackground}"
							BorderThickness="{TemplateBinding BorderThickness}" Padding="0,0,0,0">
									<Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
										<!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
									</Grid>
								</Border>
							</Popup>
						</Grid>
					</Border>

					<!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
					<ControlTemplate.Triggers>
						<!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Padding" Value="6,1,6,1"/>
							<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
							<Setter Property="MinWidth" Value="0" TargetName="Col0"/>
							<Setter Property="Width" Value="Auto" TargetName="Col3"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>

						<!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Padding" Value="6,1,6,1"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>

						<!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
						</Trigger>

						<!-- Role = SubMenuItem : this is a child menu item which has children-->
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
						</Trigger>

						<!-- If no Icon is present the we collapse the Icon Content -->
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>

						<!-- The GlyphPanel contains the CheckMark -->
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>

						<!-- Using the system colors for the Menu Highlight and IsEnabled-->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Background" Value="{StaticResource MenuHighlightedBackground}" TargetName="Border"/>
							<Setter Property="Foreground" Value="{StaticResource MenuBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource MenuBackground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Primary List View -->
	<Style x:Key="CentralPrimaryListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource BackgroundParentListView}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundParentListView}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
                <Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListViewItem}">
							<Grid Margin="0,0,0,0">
								<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
								<ContentPresenter Margin="4,3"/>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsSelected" Value="False"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" Value="{StaticResource BackgroundParentListViewHighlighted}" />
									<Setter Property="BorderBrush" Value="{StaticResource BorderBrushParentListViewHighlited}" />
								</MultiTrigger>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="Background" Value="{StaticResource BackgroundParentListViewSelected}" />
									<Setter Property="BorderBrush" Value="{StaticResource BorderBrushParentListViewSelected}" />
									<Setter Property="Foreground" Value="{StaticResource ForegroundHighlighted}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
	</Style>
	<!--Secondary List View -->
	<Style x:Key="CentralSecondaryListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource BackgroundChildrenListView}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundChildrenListView}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
				 BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent"
							BorderThickness="0"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
                <Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListViewItem}">
							<Grid Margin="0,0,0,0">
								<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
								<ContentPresenter Margin="4,3"/>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsSelected" Value="False"/>
									</MultiTrigger.Conditions>
									<Setter Property="Background" Value="{StaticResource BackgroundChildrenListViewHighlited}" />
									<Setter Property="BorderBrush" Value="{StaticResource BorderBrushChildrenListViewHighlighted}" />
								</MultiTrigger>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="Background" Value="{StaticResource BackgroundChildrenListViewSelected}" />
									<Setter Property="BorderBrush" Value="{StaticResource BorderBrushChildrenListViewHSelected}" />
									<Setter Property="Foreground" Value="{StaticResource ForegroundChildrenSelected}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>

	</Style>
	<!-- Style for the buttons located in the header-->
	<Style x:Key="HeaderButtonStyle" TargetType="{x:Type Button}" >
		<Setter Property="Background" Value="{StaticResource CentralBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource CentralBackground}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border SnapsToDevicePixels="True"
							BorderThickness="1"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}">
						<Grid>
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource MenuHighlightedBackground}" />
							<Setter Property="Background" Value="{StaticResource MenuHighlightedBackground}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource MenuHighlightedBackground}"/>
							<Setter Property="BorderBrush" Value="{StaticResource MenuHighlightedBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- This container style is for the Groups in the ListView -->
	<Style x:Key="ContainerStyle" TargetType="{x:Type GroupItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
                    <Expander Header="{Binding Name}" FontSize="{StaticResource GroupNameFontSize}" 
                              FontWeight="Medium" Foreground="{StaticResource BodyTextColorBrush}"  IsExpanded="True">
						<ItemsPresenter />
					</Expander>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Text block for Application name-->
	<Style x:Key="ApplicationNameStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource ApplicationNameBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ApplicationNameFontSize}"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
		<Setter Property="Margin" Value="2,2,0,0"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>
	<!--Text block for Content Text-->
	<Style x:Key="ContentTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource BodyTextColorBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,2,0,2"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
	</Style>
	<!--Text block for Header Text-->
	<Style x:Key="HeaderTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,2,0,2"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
	</Style>
	<!--Text block for Group Name in Lists Text-->
	<Style x:Key="ListHeaderTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
		<Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="0,2,0,2"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="TextOptions.TextHintingMode" Value="Animated" />
	</Style>
	<!--Search Text Box Style-->
	<Style TargetType="TextBox" x:Key="SearchTextBox">
	  <Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="Gray"/>
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
		<Setter Property="CaretBrush" Value="Black"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="24">
						<TextBlock Foreground="{StaticResource SearchTextForeground}"  Margin="5,0,0,0" 
								   VerticalAlignment="Center" Name="search" Text="Search ..." Visibility="Hidden"/>
						<ScrollViewer x:Name="PART_ContentHost" Margin="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TextBox.Text" Value="">
							<Setter TargetName="search" Property="Visibility" Value="Visible"/>
						</Trigger>
						<Trigger Property="TextBox.Text" Value="{x:Null}">
							<Setter TargetName="search" Property="Visibility" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="search" Property="Foreground" Value="Black" />
						</Trigger>
						<Trigger Property="IsFocused" Value="true">
							<Setter TargetName="search" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>   
</ResourceDictionary>